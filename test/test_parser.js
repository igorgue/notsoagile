// Generated by CoffeeScript 1.3.3
(function() {
  var assert, parser, test_all_cases, test_parse_empty_content, test_parse_metions, test_parse_status, test_parse_tags;

  assert = require('assert');

  parser = require('../parser');

  test_parse_tags = function() {
    var test_content;
    test_content = 'Fix #problem with scrolls #frontend #design';
    parser.parse(test_content, function(err, data) {
      var index, tag, _i, _len, _ref, _results;
      if (err) {
        throw new Error("Error parsing tags: " + err);
      }
      assert.equal(data.tags.length, 3);
      _ref = ['#problem', '#frontend', '#design'];
      _results = [];
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        tag = _ref[index];
        _results.push(assert.equal(data.tags[index], tag));
      }
      return _results;
    });
  };

  test_parse_metions = function() {
    var test_content;
    test_content = 'Fix parsing bugs now bitch @igorgue';
    parser.parse(test_content, function(err, data) {
      if (err) {
        throw new Error("Error parsing mentions: " + err);
      }
      assert.equal(data.mentions.length, 1);
      return assert.equal(data.mentions[0], '@igorgue');
    });
  };

  test_parse_status = function() {
    var test_content;
    test_content = 'Fix critical bugs before release status:started';
    return parser.parse(test_content, function(err, data) {
      if (err) {
        throw new Error("Error parsing mentions: " + err);
      }
      assert.equal(data.statuses.length, 1);
      return assert.equal(data.statuses[0], 'status:started');
    });
  };

  test_parse_empty_content = function() {
    var test_content;
    test_content = '';
    return assert.throws(function() {
      parser.parse(test_content, function(err, data) {
        if (err) {
          throw new Error(err);
        }
      });
      return Error;
    });
  };

  test_all_cases = function() {
    var test_content;
    test_content = "Ok this is gonna be a #big-task @igorgue has to do\na lot of this to make this release happen this weekend. He might need\nhelp from @_why. #release status:open";
    return parser.parse(test_content, function(err, data) {
      var index, mention, status, tag, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
      if (err) {
        throw new Error("Error parsing he combination: " + err);
      }
      assert.equal(data.tags.length, 2);
      assert.equal(data.mentions.length, 2);
      assert.equal(data.statuses.length, 1);
      _ref = ['#big-task', '#release'];
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        tag = _ref[index];
        assert.equal(data.tags[index], tag);
      }
      _ref1 = ['@igorgue', '@_why'];
      for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {
        mention = _ref1[index];
        assert.equal(data.mentions[index], mention);
      }
      _ref2 = ['status:open'];
      _results = [];
      for (index = _k = 0, _len2 = _ref2.length; _k < _len2; index = ++_k) {
        status = _ref2[index];
        _results.push(assert.equal(data.statuses[index], status));
      }
      return _results;
    });
  };

  module.exports = {
    tests: [test_parse_tags, test_parse_metions, test_parse_empty_content, test_all_cases]
  };

}).call(this);
